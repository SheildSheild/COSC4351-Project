{"ast":null,"code":"var _jsxFileName = \"/home/shield/SUMMER2024/COSC4353-Project/client/src/components/ProfileManagement/profileManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './profileManagement.css';\nimport state from '../mockData/state.json';\nimport skills from '../mockData/skills.json';\n// import user from '../mockData/fake_users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    fullName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    skills: [],\n    preferences: '',\n    availability: []\n  });\n  const [errors, setErrors] = useState({});\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n    validateInput(name, value);\n  };\n  const handleSkillsChange = skillId => {\n    setFormData(prevData => {\n      const newSkills = prevData.skills.includes(skillId) ? prevData.skills.filter(id => id !== skillId) : [...prevData.skills, skillId];\n      return {\n        ...prevData,\n        skills: newSkills\n      };\n    });\n  };\n  const handleDateChange = e => {\n    const date = e.target.value;\n    if (!formData.availability.includes(date)) {\n      setFormData({\n        ...formData,\n        availability: [...formData.availability, date]\n      });\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        availability: '' // Clear any existing error message\n      }));\n    }\n  };\n  const removeDate = date => {\n    setFormData({\n      ...formData,\n      availability: formData.availability.filter(d => d !== date)\n    });\n  };\n  const validateInput = (name, value) => {\n    let errorMsg = '';\n    switch (name) {\n      case 'fullName':\n        if (value.length > 50) {\n          errorMsg = 'Full Name cannot exceed 50 characters.';\n        }\n        break;\n      case 'address1':\n        if (value.length > 100) {\n          errorMsg = 'Address 1 cannot exceed 100 characters.';\n        }\n        break;\n      case 'address2':\n        if (value.length > 100) {\n          errorMsg = 'Address 2 cannot exceed 100 characters.';\n        }\n        break;\n      case 'city':\n        if (value.length > 100) {\n          errorMsg = 'City cannot exceed 100 characters.';\n        }\n        break;\n      case 'zipCode':\n        if (!isValidZipCode(value)) {\n          errorMsg = 'Invalid ZIP Code format.';\n        }\n        break;\n      default:\n        break;\n    }\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: errorMsg\n    }));\n  };\n  const isValidZipCode = value => {\n    // Allow either standard 5-digit ZIP code or ZIP+4 (5 digits followed by a dash and 4 digits)\n    return /^\\d{5}(-\\d{4})?$/.test(value);\n  };\n  const handleZipCodeChange = e => {\n    let {\n      value\n    } = e.target;\n    // Remove non-numeric characters\n    value = value.replace(/\\D/g, '');\n\n    // Format ZIP code with hyphen for ZIP+4 if necessary\n    if (value.length > 5) {\n      value = `${value.slice(0, 5)}-${value.slice(5)}`;\n    }\n    setFormData({\n      ...formData,\n      zipCode: value\n    });\n    validateInput('zipCode', value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let hasErrors = false;\n    const newErrors = {};\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (!loggedInUser) {\n      console.error('No logged-in user found');\n      return;\n    }\n    Object.keys(formData).forEach(key => {\n      if (key !== 'address2' && key !== 'preferences') {\n        validateInput(key, formData[key]);\n        if (formData[key] === '' || errors[key]) {\n          hasErrors = true;\n          if (formData[key] === '') {\n            newErrors[key] = `${key.charAt(0).toUpperCase() + key.slice(1)} is required.`;\n          }\n        }\n      }\n    });\n    if (formData.skills.length === 0) {\n      newErrors.skills = 'Skills are required.';\n      hasErrors = true;\n    }\n    if (!hasErrors) {\n      fetch(`http://localhost:3000/api/profile/${loggedInUser.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(data => {\n        console.log(formData);\n        if (data.message === 'User not found') {\n          console.error('User not found');\n        } else {\n          console.log('Profile updated successfully!', data);\n          alert('Profile updated successfully!');\n        }\n      }).catch(error => console.error('Error updating profile:', error));\n    } else {\n      console.log('Form has errors.');\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        ...newErrors\n      }));\n    }\n  };\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"profile-container\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Full Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fullName\",\n        value: formData.fullName,\n        onChange: handleChange,\n        required: true,\n        maxLength: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), errors.fullName && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: errors.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address 1: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address1\",\n        value: formData.address1,\n        onChange: handleChange,\n        required: true,\n        maxLength: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), errors.address1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: errors.address1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address 2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address2\",\n        value: formData.address2,\n        onChange: handleChange,\n        maxLength: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), errors.address2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: errors.address2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"City: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        value: formData.city,\n        onChange: handleChange,\n        required: true,\n        maxLength: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), errors.city && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: errors.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"State: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"state\",\n        value: formData.state,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), state.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.code,\n          children: state.name\n        }, state.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ZIP Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"zipCode\",\n        value: formData.zipCode,\n        onChange: handleZipCodeChange,\n        maxLength: \"10\",\n        placeholder: \"Enter ZIP or ZIP+4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), errors.zipCode && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: errors.zipCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Skills: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multi-select-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleDropdown,\n          className: errors.skills ? \"error\" : \"\",\n          children: formData.skills.length === 0 ? 'Select Skills' : `Selected Skills: ${formData.skills.map(skillId => skills.find(skill => skill.id === skillId).name).join(', ')}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"multi-select-options\",\n          children: skills.map(skill => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.skills.includes(skill.id),\n              onChange: () => handleSkillsChange(skill.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), skill.name]\n          }, skill.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), errors.skills && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: errors.skills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-skills\",\n      children: formData.skills.length > 0 ? formData.skills.map(skillId => {\n        const skill = skills.find(s => s.id === skillId);\n        return skill && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-skill\",\n          children: skill.name\n        }, skill.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder-text\",\n        children: \"No skills selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Preferences:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"preferences\",\n        value: formData.preferences,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Availability: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"availability\",\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [formData.availability.length === 0 && errors.availability && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.availability\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), formData.availability.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-date\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeDate(date),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"TJgJ4IGWamSb9ei468NbCpmwe5E=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","state","skills","jsxDEV","_jsxDEV","Profile","_s","formData","setFormData","fullName","address1","address2","city","zipCode","preferences","availability","errors","setErrors","dropdownOpen","setDropdownOpen","handleChange","e","name","value","target","prevData","validateInput","handleSkillsChange","skillId","newSkills","includes","filter","id","handleDateChange","date","prevErrors","removeDate","d","errorMsg","length","isValidZipCode","test","handleZipCodeChange","replace","slice","handleSubmit","preventDefault","hasErrors","newErrors","loggedInUser","JSON","parse","localStorage","getItem","console","error","Object","keys","forEach","key","charAt","toUpperCase","fetch","method","headers","body","stringify","then","response","json","data","log","message","alert","catch","toggleDropdown","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","maxLength","map","code","placeholder","onClick","find","skill","join","checked","s","index","_c","$RefreshReg$"],"sources":["/home/shield/SUMMER2024/COSC4353-Project/client/src/components/ProfileManagement/profileManagement.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './profileManagement.css';\nimport state from '../mockData/state.json';\nimport skills from '../mockData/skills.json';\n// import user from '../mockData/fake_users.json';\n\nconst Profile = () => {\n  const [formData, setFormData] = useState({\n    fullName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    skills: [],\n    preferences: '',\n    availability: []\n  });\n\n  const [errors, setErrors] = useState({});\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value\n    }));\n\n    validateInput(name, value);\n  };\n\n  const handleSkillsChange = (skillId) => {\n    setFormData((prevData) => {\n      const newSkills = prevData.skills.includes(skillId)\n        ? prevData.skills.filter(id => id !== skillId)\n        : [...prevData.skills, skillId];\n      return {\n        ...prevData,\n        skills: newSkills\n      };\n    });\n  };\n\n  const handleDateChange = (e) => {\n    const date = e.target.value;\n    if (!formData.availability.includes(date)) {\n      setFormData({\n        ...formData,\n        availability: [...formData.availability, date]\n      });\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        availability: '' // Clear any existing error message\n      }));\n    }\n  };\n  \n  const removeDate = (date) => {\n    setFormData({\n      ...formData,\n      availability: formData.availability.filter(d => d !== date)\n    });\n  };\n  \n\n  const validateInput = (name, value) => {\n    let errorMsg = '';\n\n    switch (name) {\n      case 'fullName':\n        if (value.length > 50) {\n          errorMsg = 'Full Name cannot exceed 50 characters.';\n        }\n        break;\n      case 'address1':\n        if (value.length > 100) {\n          errorMsg = 'Address 1 cannot exceed 100 characters.';\n        }\n        break;\n      case 'address2':\n        if (value.length > 100) {\n          errorMsg = 'Address 2 cannot exceed 100 characters.';\n        }\n        break;\n      case 'city':\n        if (value.length > 100) {\n          errorMsg = 'City cannot exceed 100 characters.';\n        }\n        break;\n      case 'zipCode':\n        if (!isValidZipCode(value)) {\n          errorMsg = 'Invalid ZIP Code format.';\n        }\n        break;\n      default:\n        break;\n    }\n\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: errorMsg\n    }));\n  };\n\n  const isValidZipCode = (value) => {\n    // Allow either standard 5-digit ZIP code or ZIP+4 (5 digits followed by a dash and 4 digits)\n    return /^\\d{5}(-\\d{4})?$/.test(value);\n  };\n\n  const handleZipCodeChange = (e) => {\n    let { value } = e.target;\n    // Remove non-numeric characters\n    value = value.replace(/\\D/g, '');\n\n    // Format ZIP code with hyphen for ZIP+4 if necessary\n    if (value.length > 5) {\n      value = `${value.slice(0, 5)}-${value.slice(5)}`;\n    }\n\n    setFormData({\n      ...formData,\n      zipCode: value\n    });\n    validateInput('zipCode', value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let hasErrors = false;\n    const newErrors = {};\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n\n    if (!loggedInUser) {\n        console.error('No logged-in user found');\n        return;\n    }\n\n    Object.keys(formData).forEach((key) => {\n        if (key !== 'address2' && key !== 'preferences') {\n            validateInput(key, formData[key]);\n            if (formData[key] === '' || errors[key]) {\n                hasErrors = true;\n                if (formData[key] === '') {\n                    newErrors[key] = `${key.charAt(0).toUpperCase() + key.slice(1)} is required.`;\n                }\n            }\n        }\n    });\n\n    if (formData.skills.length === 0) {\n        newErrors.skills = 'Skills are required.';\n        hasErrors = true;\n    }\n\n    if (!hasErrors) {\n        fetch(`http://localhost:3000/api/profile/${loggedInUser.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n            .then(response => response.json())\n            .then(data => {\n              console.log(formData);\n                if (data.message === 'User not found') {\n                    console.error('User not found');\n                } else {\n                    console.log('Profile updated successfully!', data);\n                    alert('Profile updated successfully!');\n                }\n            })\n            .catch(error => console.error('Error updating profile:', error));\n    } else {\n        console.log('Form has errors.');\n        setErrors((prevErrors) => ({\n            ...prevErrors,\n            ...newErrors\n        }));\n    }\n};\n  \n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <form className=\"profile-container\" onSubmit={handleSubmit}>\n      <h1>Profile Management</h1>\n\n      <div className=\"form-group\">\n        <label>Full Name: <span className=\"required\">* required</span></label>\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          value={formData.fullName}\n          onChange={handleChange}\n          required\n          maxLength=\"50\"\n        />\n        {errors.fullName && <span className=\"error-message\">{errors.fullName}</span>}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Address 1: <span className=\"required\">* required</span></label>\n        <input\n          type=\"text\"\n          name=\"address1\"\n          value={formData.address1}\n          onChange={handleChange}\n          required\n          maxLength=\"100\"\n        />\n        {errors.address1 && <span className=\"error-message\">{errors.address1}</span>}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Address 2:</label>\n        <input\n          type=\"text\"\n          name=\"address2\"\n          value={formData.address2}\n          onChange={handleChange}\n          maxLength=\"100\"\n        />\n        {errors.address2 && <span className=\"error-message\">{errors.address2}</span>}\n      </div>\n\n      <div className=\"form-group\">\n        <label>City: <span className=\"required\">* required</span></label>\n        <input\n          type=\"text\"\n          name=\"city\"\n          value={formData.city}\n          onChange={handleChange}\n          required\n          maxLength=\"100\"\n        />\n        {errors.city && <span className=\"error-message\">{errors.city}</span>}\n      </div>\n\n      <div className=\"form-group\">\n        <label>State: <span className=\"required\">* required</span></label>\n        <select\n          name=\"state\"\n          value={formData.state}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">Select State</option>\n          {state.map((state) => (\n            <option key={state.code} value={state.code}>\n              {state.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>ZIP Code: <span className=\"required\">* required</span></label>\n        <input\n          type=\"text\"\n          name=\"zipCode\"\n          value={formData.zipCode}\n          onChange={handleZipCodeChange}\n          maxLength=\"10\"\n          placeholder=\"Enter ZIP or ZIP+4\"\n          required\n        />\n        {errors.zipCode && <span className=\"error-message\">{errors.zipCode}</span>}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Skills: <span className=\"required\">* required</span></label>\n        <div className=\"multi-select-dropdown\">\n          <button\n            type=\"button\"\n            onClick={toggleDropdown}\n            className={errors.skills ? \"error\" : \"\"}\n          >\n            {formData.skills.length === 0 ? 'Select Skills' : `Selected Skills: ${formData.skills.map(skillId => skills.find(skill => skill.id === skillId).name).join(', ')}`}\n          </button>\n          {dropdownOpen && (\n            <div className=\"multi-select-options\">\n              {skills.map((skill) => (\n                <label key={skill.id}>\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.skills.includes(skill.id)}\n                    onChange={() => handleSkillsChange(skill.id)}\n                  />\n                  {skill.name}\n                </label>\n              ))}\n            </div>\n          )}\n        </div>\n        {errors.skills && <span className=\"error-message\">{errors.skills}</span>}\n      </div>\n\n      <div className=\"selected-skills\">\n        {formData.skills.length > 0 ? (\n          formData.skills.map((skillId) => {\n            const skill = skills.find((s) => s.id === skillId);\n            return (\n              skill && (\n                <div key={skill.id} className=\"selected-skill\">\n                  {skill.name}\n                </div>\n              )\n            );\n          })\n        ) : (\n          <div className=\"placeholder-text\">No skills selected</div>\n        )}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Preferences:</label>\n        <textarea\n          name=\"preferences\"\n          value={formData.preferences}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Availability: <span className=\"required\">* required</span></label>\n        <input\n          type=\"date\"\n          name=\"availability\"\n          onChange={handleDateChange}\n        />\n        <div>\n          {formData.availability.length === 0 && errors.availability && (\n            <span className=\"error-message\">{errors.availability}</span>\n          )}\n          {formData.availability.map((date, index) => (\n            <div key={index} className=\"selected-date\">\n              <span>{date}</span>\n              <button type=\"button\" onClick={() => removeDate(date)}>Remove</button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}