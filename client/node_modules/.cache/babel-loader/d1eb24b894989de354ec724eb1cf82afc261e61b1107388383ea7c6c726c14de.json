{"ast":null,"code":"var _jsxFileName = \"/home/shield/SUMMER2024/COSC4353-Project/client/src/components/adminHistory/adminHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './adminHistory.css';\nimport fakeEvents from '../mockData/fake_event.json';\nimport users from '../mockData/fake_users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHistory = () => {\n  _s();\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [eventParticipants, setEventParticipants] = useState([]);\n  const handleEventClick = eventId => {\n    if (selectedEvent === eventId) {\n      setSelectedEvent(null); // Deselect event if already selected\n    } else {\n      setSelectedEvent(eventId); // Select the clicked event\n      fetchEventParticipants(eventId); // Fetch participants for the selected event\n    }\n  };\n  const fetchEventParticipants = async eventId => {\n    // Assuming the eventId is the same as the event index in the fakeEvents array\n    const event = fakeEvents.find(event => event.id === eventId);\n    if (event) {\n      const participants = event.participants.map(participantId => {\n        const user = users.find(u => u.id === participantId);\n        return user ? user.fullName : 'Unknown User';\n      });\n      setEventParticipants(participants);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volunteer History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"event-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Urgency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: fakeEvents.map(event => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleEventClick(event.id),\n            className: selectedEvent === event.id ? 'selected' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.urgency.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), selectedEvent === event.id && /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"participants-row\",\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: eventParticipants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: participant\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminHistory, \"WJ3iAfMxE+MSvnnw9LKlVT9JkhY=\");\n_c = AdminHistory;\nexport default AdminHistory;\nvar _c;\n$RefreshReg$(_c, \"AdminHistory\");","map":{"version":3,"names":["React","useState","fakeEvents","users","jsxDEV","_jsxDEV","AdminHistory","_s","selectedEvent","setSelectedEvent","eventParticipants","setEventParticipants","handleEventClick","eventId","fetchEventParticipants","event","find","id","participants","map","participantId","user","u","fullName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClick","name","description","location","date","urgency","colSpan","participant","index","_c","$RefreshReg$"],"sources":["/home/shield/SUMMER2024/COSC4353-Project/client/src/components/adminHistory/adminHistory.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './adminHistory.css';\nimport fakeEvents from '../mockData/fake_event.json';\nimport users from '../mockData/fake_users.json';\n\nconst AdminHistory = () => {\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [eventParticipants, setEventParticipants] = useState([]);\n\n  const handleEventClick = (eventId) => {\n    if (selectedEvent === eventId) {\n      setSelectedEvent(null); // Deselect event if already selected\n    } else {\n      setSelectedEvent(eventId); // Select the clicked event\n      fetchEventParticipants(eventId); // Fetch participants for the selected event\n    }\n  };\n\n  const fetchEventParticipants = async (eventId) => {\n    // Assuming the eventId is the same as the event index in the fakeEvents array\n    const event = fakeEvents.find(event => event.id === eventId);\n    if (event) {\n      const participants = event.participants.map(participantId => {\n        const user = users.find(u => u.id === participantId);\n        return user ? user.fullName : 'Unknown User';\n      });\n      setEventParticipants(participants);\n    }\n  };\n\n  return (\n    <div className=\"admin-history-container\">\n      <h1>Volunteer History</h1>\n      <table className=\"event-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Urgency</th>\n          </tr>\n        </thead>\n        <tbody>\n          {fakeEvents.map((event) => (\n            <React.Fragment key={event.id}>\n              <tr onClick={() => handleEventClick(event.id)} className={selectedEvent === event.id ? 'selected' : ''}>\n                <td>{event.id}</td>\n                <td>{event.name}</td>\n                <td>{event.description}</td>\n                <td>{event.location}</td>\n                <td>{event.date}</td>\n                <td>{event.urgency.name}</td>\n              </tr>\n              {selectedEvent === event.id && (\n                <tr className=\"participants-row\">\n                  <td colSpan=\"6\">\n                    <ul>\n                      {eventParticipants.map((participant, index) => (\n                        <li key={index}>{participant}</li>\n                      ))}\n                    </ul>\n                  </td>\n                </tr>\n              )}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}