{"ast":null,"code":"var _jsxFileName = \"/home/shield/SUMMER2024/COSC4353-Project/client/src/components/userEvents/userEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport events from '../mockData/fake_event.json';\nimport skillMapping from '../mockData/skillmapping.json'; // Import skill mapping\nimport dayjs from 'dayjs';\nimport './userEvents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserEventPage = () => {\n  _s();\n  const [value, setValue] = useState(new Date());\n  const [userEvents, setUserEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [availableEvents, setAvailableEvents] = useState([]);\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\n  useEffect(() => {\n    if (user) {\n      fetch('http://localhost:3000/api/events/all').then(response => response.json()).then(events => {\n        const filteredEvents = events.filter(event => user.skills.some(skill => event.requiredSkills.includes(skill)));\n        setUserEvents(filteredEvents);\n      }).catch(error => console.error('Error fetching events:', error));\n    }\n  }, [user]);\n  const onDateChange = date => {\n    setValue(date);\n    setSelectedDate(date);\n    const userAvailableEvents = events.filter(event => user.skills.some(skill => event.requiredSkills.includes(skill)) && dayjs(event.date).isSame(date, 'day'));\n    setAvailableEvents(userAvailableEvents);\n  };\n  const onEventClick = async event => {\n    const matchedEvent = userEvents.find(e => e.id === event.id);\n    if (matchedEvent) {\n      const isInAvailability = user.availability.some(range => {\n        const [start, end] = range.split(' - ');\n        return dayjs(matchedEvent.date).isAfter(start) && dayjs(matchedEvent.date).isBefore(end);\n      });\n      if (!isInAvailability) {\n        if (!window.confirm('This event is outside your availability. Are you sure you want to sign up?')) {\n          return;\n        }\n      }\n      const updatedUser = {\n        ...user\n      };\n      if (!updatedUser.acceptedEvents) {\n        updatedUser.acceptedEvents = [];\n      }\n      const currentTime = dayjs().format('MM-DD-YYYY HH');\n      updatedUser.acceptedEvents.push({\n        eventId: matchedEvent.id,\n        signUpTime: currentTime\n      });\n      try {\n        const response = await fetch(`http://localhost:3000/api/signup`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user.id,\n            eventId: matchedEvent.id\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok: ' + response.statusText);\n        }\n        const data = await response.json();\n        console.log('Sign-up successful:', data);\n        localStorage.setItem('loggedInUser', JSON.stringify(updatedUser));\n        const notifications = JSON.parse(localStorage.getItem('notifications')) || [];\n        notifications.push({\n          message: `${user.fullName} has signed up for the ${matchedEvent.name} job. | ${currentTime}`\n        });\n        localStorage.setItem('notifications', JSON.stringify(notifications));\n        alert(`You have successfully signed up for ${matchedEvent.name}!`);\n        setUserEvents(userEvents.map(e => e.id === matchedEvent.id ? {\n          ...e,\n          signedUp: true\n        } : e));\n      } catch (error) {\n        console.error('Error signing up for event:', error);\n        alert('There was an error signing up for the event. Please try again.');\n      }\n    }\n  };\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      var _user$acceptedEvents;\n      const event = userEvents.find(e => e.date === dayjs(date).format('YYYY-MM-DD'));\n      const signedUpEvent = (_user$acceptedEvents = user.acceptedEvents) === null || _user$acceptedEvents === void 0 ? void 0 : _user$acceptedEvents.find(e => e.eventId === (event === null || event === void 0 ? void 0 : event.id));\n      if (event) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `event ${signedUpEvent ? 'signed-up' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), signedUpEvent && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"signed-up-indicator\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-event-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: onDateChange,\n        value: value,\n        tileContent: tileContent,\n        onClickDay: onEventClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), selectedDate && availableEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events on \", dayjs(selectedDate).format('MMMM D, YYYY')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableEvents.map(event => {\n          var _user$acceptedEvents2;\n          const isSignedUp = (_user$acceptedEvents2 = user.acceptedEvents) === null || _user$acceptedEvents2 === void 0 ? void 0 : _user$acceptedEvents2.some(e => e.eventId === event.id);\n          // Map skill IDs to skill names\n          const requiredSkills = event.requiredSkills.map(skillId => skillMapping[skillId]).join(', ');\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), \" - \", event.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"skills\",\n              children: [\"Skills Required: \", requiredSkills]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), !isSignedUp && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onEventClick(event),\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 35\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(UserEventPage, \"WVSu9MGAhGGRqONATy605iZAmiE=\");\n_c = UserEventPage;\nexport default UserEventPage;\nvar _c;\n$RefreshReg$(_c, \"UserEventPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","events","skillMapping","dayjs","jsxDEV","_jsxDEV","UserEventPage","_s","value","setValue","Date","userEvents","setUserEvents","selectedDate","setSelectedDate","availableEvents","setAvailableEvents","user","JSON","parse","localStorage","getItem","fetch","then","response","json","filteredEvents","filter","event","skills","some","skill","requiredSkills","includes","catch","error","console","onDateChange","date","userAvailableEvents","isSame","onEventClick","matchedEvent","find","e","id","isInAvailability","availability","range","start","end","split","isAfter","isBefore","window","confirm","updatedUser","acceptedEvents","currentTime","format","push","eventId","signUpTime","method","headers","body","stringify","userId","ok","Error","statusText","data","log","setItem","notifications","message","fullName","name","alert","map","signedUp","tileContent","view","_user$acceptedEvents","signedUpEvent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClickDay","length","_user$acceptedEvents2","isSignedUp","skillId","join","description","onClick","_c","$RefreshReg$"],"sources":["/home/shield/SUMMER2024/COSC4353-Project/client/src/components/userEvents/userEvents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport events from '../mockData/fake_event.json';\nimport skillMapping from '../mockData/skillmapping.json'; // Import skill mapping\nimport dayjs from 'dayjs';\nimport './userEvents.css';\n\nconst UserEventPage = () => {\n  const [value, setValue] = useState(new Date());\n  const [userEvents, setUserEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [availableEvents, setAvailableEvents] = useState([]);\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\n\n  useEffect(() => {\n    if (user) {\n      fetch('http://localhost:3000/api/events/all')\n        .then(response => response.json())\n        .then(events => {\n          const filteredEvents = events.filter(event =>\n            user.skills.some(skill => event.requiredSkills.includes(skill))\n          );\n          setUserEvents(filteredEvents);\n        })\n        .catch(error => console.error('Error fetching events:', error));\n    }\n  }, [user]);\n\n  const onDateChange = (date) => {\n    setValue(date);\n    setSelectedDate(date);\n    const userAvailableEvents = events.filter(event =>\n      user.skills.some(skill => event.requiredSkills.includes(skill)) &&\n      dayjs(event.date).isSame(date, 'day')\n    );\n    setAvailableEvents(userAvailableEvents);\n  };\n\n  const onEventClick = async (event) => {\n    const matchedEvent = userEvents.find(e => e.id === event.id);\n    if (matchedEvent) {\n      const isInAvailability = user.availability.some(range => {\n        const [start, end] = range.split(' - ');\n        return dayjs(matchedEvent.date).isAfter(start) && dayjs(matchedEvent.date).isBefore(end);\n      });\n\n      if (!isInAvailability) {\n        if (!window.confirm('This event is outside your availability. Are you sure you want to sign up?')) {\n          return;\n        }\n      }\n\n      const updatedUser = { ...user };\n      if (!updatedUser.acceptedEvents) {\n        updatedUser.acceptedEvents = [];\n      }\n      const currentTime = dayjs().format('MM-DD-YYYY HH');\n      updatedUser.acceptedEvents.push({\n        eventId: matchedEvent.id, signUpTime: currentTime\n      });\n\n      try {\n        const response = await fetch(`http://localhost:3000/api/signup`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user.id,\n            eventId: matchedEvent.id,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok: ' + response.statusText);\n        }\n\n        const data = await response.json();\n        console.log('Sign-up successful:', data);\n\n        localStorage.setItem('loggedInUser', JSON.stringify(updatedUser));\n\n        const notifications = JSON.parse(localStorage.getItem('notifications')) || [];\n        notifications.push({message: `${user.fullName} has signed up for the ${matchedEvent.name} job. | ${currentTime}`});\n        localStorage.setItem('notifications', JSON.stringify(notifications));\n\n        alert(`You have successfully signed up for ${matchedEvent.name}!`);\n        setUserEvents(userEvents.map(e => e.id === matchedEvent.id ? { ...e, signedUp: true } : e));\n      } catch (error) {\n        console.error('Error signing up for event:', error);\n        alert('There was an error signing up for the event. Please try again.');\n      }\n    }\n  };\n\n  const tileContent = ({ date, view }) => {\n    if (view === 'month') {\n      const event = userEvents.find(e => e.date === dayjs(date).format('YYYY-MM-DD'));\n      const signedUpEvent = user.acceptedEvents?.find(e => e.eventId === event?.id);\n\n      if (event) {\n        return (\n          <div className={`event ${signedUpEvent ? 'signed-up' : ''}`}>\n            <span>{event.name}</span>\n            {signedUpEvent && <span className=\"signed-up-indicator\">✔</span>}\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <div className=\"user-event-page\">\n      <br />\n      <br />\n      <br />\n      <br />\n      <div className=\"calendar-container\">\n        <Calendar\n          onChange={onDateChange}\n          value={value}\n          tileContent={tileContent}\n          onClickDay={onEventClick}\n        />\n      </div>\n      {selectedDate && availableEvents.length > 0 && (\n        <div className=\"events-list\">\n          <h3>Events on {dayjs(selectedDate).format('MMMM D, YYYY')}</h3>\n          <ul>\n            {availableEvents.map(event => {\n              const isSignedUp = user.acceptedEvents?.some(e => e.eventId === event.id);\n              // Map skill IDs to skill names\n              const requiredSkills = event.requiredSkills.map(skillId => skillMapping[skillId]).join(', ');\n              return (\n                <li key={event.id}>\n                  <strong>{event.name}</strong> - {event.description}\n                  <br />\n                  <span className=\"skills\">Skills Required: {requiredSkills}</span>\n                  <br />\n                  {!isSignedUp && <button onClick={() => onEventClick(event)}>Sign Up</button>}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserEventPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}